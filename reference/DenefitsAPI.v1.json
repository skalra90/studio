{
  "openapi": "3.0.0",
  "info": {
    "title": "API Reference",
    "version": "1.0.0",
    "description": "The Denefits API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. You can use the Denefits API in test mode, which does not affect your live data or interact with the banking networks. The token you use to authenticate the request determines whether the request is live mode or test mode.",
    "contact": {
      "email": "sukhpreet@denefits.com",
      "name": "Denefits API Support"
    }
  },
  "servers": [
    {
      "url": "https://api.denefits.com:8005/v1",
      "description": "Development"
    }
  ],
  "paths": {
    "/provider": {
      "get": {
        "summary": "List of Providers",
        "tags": [
          "Providers"
        ],
        "operationId": "get-providers",
        "description": "Returns providers registered with your account.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "description": "Auth token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Provider"
                          }
                        },
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "data": {
                        "count": 2,
                        "list": [
                          {
                            "date_registered": "2020-05-08T05:19:20.000Z",
                            "email": "test.123@gmail.com",
                            "first_name": "test name",
                            "last_name": "test",
                            "phone": "1212312345",
                            "provider_id": 9101
                          },
                          {
                            "date_registered": "2020-05-01T15:36:41.000Z",
                            "email": "demo.123@yopmail.com",
                            "first_name": "Demo",
                            "last_name": "now",
                            "phone": "855226644",
                            "provider_id": 5678
                          }
                        ]
                      },
                      "message": "Request executed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is missing in the headers": {
                    "value": {
                      "data": [],
                      "message": "Mandatory parameter 'token' is missing."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is wrong": {
                    "value": {
                      "data": [],
                      "message": "Invalid auth token provided"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": " Request Faild",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If provider_id is not valid ": {
                    "value": {
                      "data": [],
                      "message": "Invalid provider ID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a Provider",
        "operationId": "post-provider",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "provider_id": {
                            "type": "number"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Provider added successfully": {
                    "value": {
                      "data": {
                        "provider_id": 6410
                      },
                      "message": "Provider added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is missing in headers": {
                    "value": {
                      "data": [],
                      "message": "Mandatory parameter 'token' is missing."
                    }
                  },
                  "If any of the required_field is missing in the body": {
                    "value": {
                      "data": [],
                      "message": "\"required_field\" is required"
                    }
                  },
                  "If wrong mobile number is entered": {
                    "value": {
                      "data": [],
                      "message": "Invalid \"phone\" provided "
                    }
                  },
                  "If wrong email is entered": {
                    "value": {
                      "data": [],
                      "message": "\"email\" must be a valid email"
                    }
                  },
                  "If email is empty": {
                    "value": {
                      "data": [],
                      "message": "\"email\" is not allowed to be empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is wrong": {
                    "value": {
                      "data": [],
                      "message": "Invalid auth token provided"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Request Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If mobile number is already exist in the system.": {
                    "value": {
                      "data": [],
                      "message": "Same Mobile"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new provider under your account.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "required": true,
            "description": "Auth token"
          }
        ],
        "tags": [
          "Providers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "number"
                  },
                  "business_address": {
                    "type": "string"
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "phone",
                  "zipcode",
                  "business_address"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "email": "charles.one@denefiys.com",
                    "first_name": "Charles",
                    "last_name": "One",
                    "phone": "1234567890",
                    "zipcode": "23433",
                    "business_address": "test address"
                  }
                }
              }
            }
          },
          "description": "Provider Object"
        }
      },
      "parameters": []
    },
    "/provider/bank": {
      "post": {
        "summary": "Add Provider's bank account",
        "tags": [
          "Providers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Bank added successfully",
                      "data": {
                        "id": "ba_1Gj0ndIS***********",
                        "object": "bank_account",
                        "account": "acct_1G***********",
                        "account_holder_name": "Jenny Rosen",
                        "account_holder_type": "individual",
                        "bank_name": "STRIPE TEST BANK",
                        "country": "US",
                        "currency": "usd",
                        "default_for_currency": true,
                        "fingerprint": "DGlQcA******",
                        "last4": "6789",
                        "metadata": {},
                        "routing_number": "11******",
                        "status": "verified"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Missing required field": {
                    "value": {
                      "message": "\"provider_id\" is required"
                    }
                  },
                  "Use invalid file ID": {
                    "value": {
                      "message": "Invalid dl_front provided"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid bank token": {
                    "value": {
                      "message": "No such token: btok_37499879"
                    }
                  },
                  "Use same file again": {
                    "value": {
                      "message": "This file upload is already attached to an account."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-provider-bank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider_id": {
                    "type": "integer"
                  },
                  "business_email": {
                    "type": "string"
                  },
                  "business_name": {
                    "type": "string"
                  },
                  "business_phone": {
                    "type": "string"
                  },
                  "business_address": {
                    "type": "string"
                  },
                  "business_zipcode": {
                    "type": "integer"
                  },
                  "bank_token": {
                    "type": "string"
                  },
                  "ssn_number": {
                    "type": "string"
                  },
                  "dl_front": {
                    "type": "string"
                  },
                  "dl_back": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string"
                  }
                },
                "required": [
                  "provider_id",
                  "business_address",
                  "business_zipcode",
                  "bank_token",
                  "ssn_number",
                  "dl_front",
                  "dl_back",
                  "date_of_birth"
                ]
              },
              "examples": {
                "Example-1": {
                  "value": {
                    "provider_id": 6485,
                    "business_email": "john@gmail.com",
                    "business_name": "John dentals",
                    "business_phone": "1234567890",
                    "business_address": "#4545 street",
                    "business_zipcode": 12345,
                    "ssn_number": 123456789,
                    "dl_front": "file_1GiLcuGLNiHiuNVIvOx4U3Fy",
                    "dl_back": "file_1GiLd7GLNiHiuNVITn329MVK",
                    "bank_token": "btok_us_verified",
                    "date_of_birth": "28-5-1990"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "description": "Add provider's bank account which will be used to receive the payouts"
      },
      "get": {
        "summary": "Retrieve bank account",
        "tags": [
          "Providers"
        ],
        "responses": {},
        "operationId": "get-provider-bank",
        "description": "Returns provider's bank details.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "description": "Auth Token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider_id": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/contract/plans": {
      "get": {
        "summary": "List of Plans",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "plans": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "plan_id": {
                                  "description": "Plan's unique identification.",
                                  "type": "string"
                                },
                                "interest_rate": {
                                  "type": "number",
                                  "description": "Interest rate."
                                },
                                "number_of_payments": {
                                  "type": "integer",
                                  "description": "Duration of the contract."
                                },
                                "monthly_payable": {
                                  "type": "object",
                                  "description": "Monthly Payable details.",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total payable amount every month (Without Late Fees)"
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "description": "Breakdown of total payable amount.",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "Recurring amount."
                                        },
                                        "transaction_fee": {
                                          "type": "number",
                                          "description": "Transsaction Fee."
                                        }
                                      }
                                    }
                                  }
                                },
                                "to_pay_now": {
                                  "type": "object",
                                  "description": "Amount to pay now details.",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total amount to pay now."
                                    },
                                    "breakdown": {
                                      "type": "object",
                                      "description": "Breakdown of amount.",
                                      "properties": {
                                        "denefits_enrollment_fee": {
                                          "type": "number",
                                          "description": "Flat contract creation fee."
                                        },
                                        "upfront_payment": {
                                          "type": "object",
                                          "description": "Upfront payment details.",
                                          "properties": {
                                            "total": {
                                              "type": "number",
                                              "description": "Total upfront payment."
                                            },
                                            "breakdown": {
                                              "type": "object",
                                              "description": "Breakdown of upfront payment.",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "Upfront amount."
                                                },
                                                "transaction_fee": {
                                                  "type": "number",
                                                  "description": "Upfront transaction fee."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "Message."
                    }
                  }
                },
                "examples": {
                  "Success.": {
                    "value": {
                      "message": "Success",
                      "data": {
                        "plans": [
                          {
                            "plan_id": "plan_P6464M12A1000D00",
                            "number_of_payments": 12,
                            "interest_rate": 16.99,
                            "monthly_payable": {
                              "total": 94.06,
                              "breakdown": {
                                "amount": 91.06,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 124.06,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 94.06,
                                  "breakdown": {
                                    "amount": 91.06,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          },
                          {
                            "plan_id": "plan_P6464M18A1000D00",
                            "number_of_payments": 18,
                            "interest_rate": 16.49,
                            "monthly_payable": {
                              "total": 70.29,
                              "breakdown": {
                                "amount": 67.29,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 100.29,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 70.29,
                                  "breakdown": {
                                    "amount": 67.29,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          },
                          {
                            "plan_id": "plan_P6464M24A1000D00",
                            "number_of_payments": 24,
                            "interest_rate": 15.99,
                            "monthly_payable": {
                              "total": 57.96,
                              "breakdown": {
                                "amount": 54.96,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 87.96,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 57.96,
                                  "breakdown": {
                                    "amount": 54.96,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          },
                          {
                            "plan_id": "plan_P6464M30A1000D00",
                            "number_of_payments": 30,
                            "interest_rate": 15.49,
                            "monthly_payable": {
                              "total": 50.4,
                              "breakdown": {
                                "amount": 47.4,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 80.4,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 50.4,
                                  "breakdown": {
                                    "amount": 47.4,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          },
                          {
                            "plan_id": "plan_P6464M36A1000D00",
                            "number_of_payments": 36,
                            "interest_rate": 14.99,
                            "monthly_payable": {
                              "total": 45.26,
                              "breakdown": {
                                "amount": 42.26,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 75.26,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 45.26,
                                  "breakdown": {
                                    "amount": 42.26,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          },
                          {
                            "plan_id": "plan_P6464M42A1000D00",
                            "number_of_payments": 42,
                            "interest_rate": 14.49,
                            "monthly_payable": {
                              "total": 41.5,
                              "breakdown": {
                                "amount": 38.5,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 71.5,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 41.5,
                                  "breakdown": {
                                    "amount": 38.5,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          },
                          {
                            "plan_id": "plan_P6464M48A1000D00",
                            "number_of_payments": 48,
                            "interest_rate": 13.99,
                            "monthly_payable": {
                              "total": 38.6,
                              "breakdown": {
                                "amount": 35.6,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 68.6,
                              "breakdown": {
                                "denefits_enrollment_fee": "30.00",
                                "upfront_payment": {
                                  "total": 38.6,
                                  "breakdown": {
                                    "amount": 35.6,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Provider ID missing": {
                    "value": {
                      "data": [],
                      "message": "Mandatory parameter 'provider_id' is missing."
                    }
                  },
                  "Token missing.": {
                    "value": {
                      "data": [],
                      "message": "Mandatory parameter 'token' is missing."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is wrong": {
                    "value": {
                      "data": [],
                      "message": "Invalid auth token provided"
                    }
                  },
                  "if provider_id is wrong": {
                    "value": {
                      "message": "Provider does not belong to this partner"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Request Failed"
          }
        },
        "operationId": "get-plans",
        "description": "Returns plans for creating a contract.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "description": "Auth Token",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "provider_id",
            "description": "Contract will belong to this provider.",
            "required": true
          },
          {
            "schema": {
              "type": "number",
              "minimum": 200,
              "maximum": 10000,
              "example": 1200
            },
            "in": "query",
            "name": "amount",
            "description": "Amount to be financed.",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 12,
              "maximum": 48
            },
            "in": "query",
            "name": "filter_month",
            "description": "Return plan for this specific month."
          }
        ],
        "requestBody": {
          "description": ""
        },
        "tags": [
          "Contract"
        ]
      },
      "parameters": []
    },
    "/contract/select": {
      "post": {
        "summary": "Select a Plan",
        "operationId": "contract-create",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "finance_token": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is missing in headers": {
                    "value": {
                      "data": [],
                      "message": "Mandatory parameter 'token' is missing."
                    }
                  },
                  "If any of the required_field is missing": {
                    "value": {
                      "data": [],
                      "message": "\"required_field\" is required"
                    }
                  },
                  "If financed_amount is empty or is not a number": {
                    "value": {
                      "data": [],
                      "message": "\"financed_amount\" must be a number"
                    }
                  },
                  "If months are not valid": {
                    "value": {
                      "message": "Number of payments or financed amount are not valid"
                    }
                  },
                  "If start_date is empty or not a valid date.": {
                    "value": {
                      "data": [],
                      "message": "\"start_date\" must be a valid date"
                    }
                  },
                  "If customer_email is empty": {
                    "value": {
                      "data": [],
                      "message": "\"customer_email\" is not allowed to be empty"
                    }
                  },
                  "If customer_email is not a valid email": {
                    "value": {
                      "data": [],
                      "message": "\"customer_email\" must be a valid email"
                    }
                  },
                  "If customer_mobile is invalid": {
                    "value": {
                      "data": [],
                      "message": "Invalid \"customer_mobile\" provided "
                    }
                  },
                  "Somethng went wrong": {
                    "value": {
                      "message": "Contract not financed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If token is wrong": {
                    "value": {
                      "data": [],
                      "message": "Invalid auth token provided"
                    }
                  },
                  "If provider_id is wrong": {
                    "value": {
                      "message": "Provider does not belong to this partner"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "description": "Auth token",
            "required": true
          }
        ],
        "description": "Select a Plan and provide customer details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "plan_id",
                  "provider_id",
                  "customer_email",
                  "customer_first_name",
                  "customer_address",
                  "zipcode",
                  "customer_mobile",
                  "date_of_birth",
                  "customer_ssn",
                  "start_date"
                ],
                "properties": {
                  "plan_id": {
                    "type": "string",
                    "description": "Unique plan id of the plan selected for financing."
                  },
                  "provider_id": {
                    "type": "integer",
                    "format": "date",
                    "example": 6464,
                    "description": "Contract will belong to this Provider."
                  },
                  "customer_email": {
                    "type": "string",
                    "description": "Email address of the customer",
                    "format": "email",
                    "example": "steven.gerrard08@liverpoolfc.com"
                  },
                  "customer_first_name": {
                    "type": "string",
                    "description": "First name of the customer.",
                    "example": "Steven"
                  },
                  "customer_last_name": {
                    "type": "string",
                    "description": "Last name of the customer.",
                    "example": "Gerrard"
                  },
                  "customer_address": {
                    "type": "string",
                    "description": "Street address of the customer",
                    "example": "189 Beaver Ridge Ave."
                  },
                  "zipcode": {
                    "type": "string",
                    "example": "48047",
                    "minLength": 5,
                    "maxLength": 5,
                    "description": "Zipcode"
                  },
                  "customer_mobile": {
                    "type": "string",
                    "description": "US Mobile number(Without hyphens) of the customer.",
                    "example": "2025550130",
                    "minLength": 10,
                    "maxLength": 10
                  },
                  "date_of_birth": {
                    "type": "string",
                    "description": "Date of birth of customer.",
                    "format": "date",
                    "example": "1980-05-30"
                  },
                  "customer_ssn": {
                    "type": "string",
                    "description": "SSN number(Without hyphens) of the customer.",
                    "example": "227392778",
                    "minLength": 9,
                    "maxLength": 9
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Date from which first payment will be deducted.",
                    "format": "date",
                    "example": "2020-07-01"
                  },
                  "dl_number": {
                    "type": "string",
                    "description": "Driving License number of the customer."
                  }
                },
                "type": "object"
              },
              "examples": {
                "Example": {
                  "value": {
                    "plan_id": "plan_P6464M12A3000D00",
                    "provider_id": 6464,
                    "customer_email": "steven.gerrard08@lfc.com",
                    "customer_first_name": "Steven",
                    "customer_last_name": "Gerrard",
                    "customer_address": "189 Beaver Ridge Ave.",
                    "zipcode": "48047",
                    "customer_mobile": "2025550130",
                    "date_of_birth": "1980-05-30",
                    "customer_ssn": "227392778",
                    "start_date": "2020-07-01",
                    "dl_number": "DL2181281230123"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Contract"
        ]
      },
      "parameters": []
    },
    "/upload_file": {
      "post": {
        "summary": "Upload file to receive file id",
        "operationId": "post-upload_file",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "file_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success ": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "file_id": "file_1GiyMUGL***********"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Empty file": {
                    "value": {
                      "message": "file is required"
                    }
                  },
                  "Wrong purpose": {
                    "value": {
                      "message": "Possible values for purpose is 'bank_doc'"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API is used for uploading files and returns file_id which can be used in further API's",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Choose file you want to upload"
                  },
                  "purpose": {
                    "type": "string",
                    "description": "Possible values are \"bank_document\", \"denefits_file\""
                  }
                },
                "required": [
                  "file",
                  "purpose"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "File"
        ]
      }
    },
    "/provider/industry": {
      "get": {
        "summary": "Get provider's available industry details",
        "tags": [
          "Providers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "industry_list"
                      ],
                      "properties": {
                        "industry_list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "industry_list": [
                          {
                            "id": 1,
                            "name": "Healthcare"
                          },
                          {
                            "id": 56,
                            "name": "Auto Communication"
                          },
                          {
                            "id": 99,
                            "name": "Automobile"
                          },
                          {
                            "id": 58,
                            "name": "Construction"
                          },
                          {
                            "id": 45,
                            "name": "Education"
                          },
                          {
                            "id": 57,
                            "name": "Fitness"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Empty Token": {
                    "value": {
                      "message": "Mandatory parameter 'token' is missing."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Wrong token value": {
                    "value": {
                      "message": "Invalid auth token provided"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-provider-industry",
        "description": "It contains the list of industries available with unique ids which are used in /provider(post) API",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "required": true,
            "description": "Authentication token"
          }
        ]
      }
    },
    "/provider/speciality": {
      "get": {
        "summary": "Get provider's available speciality details",
        "tags": [
          "Providers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "speciality_list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "speciality_list": [
                          {
                            "id": 156,
                            "name": "Cardio special"
                          },
                          {
                            "id": 6,
                            "name": "Chiropractics"
                          },
                          {
                            "id": 12,
                            "name": "Cosmetic Surgery"
                          },
                          {
                            "id": 1,
                            "name": "Dental"
                          },
                          {
                            "id": 2,
                            "name": "Dermatology"
                          },
                          {
                            "id": 13,
                            "name": "Diabetes and Metabolic Specialist"
                          },
                          {
                            "id": 14,
                            "name": "Dietitians"
                          },
                          {
                            "id": 25,
                            "name": "Endodontist"
                          },
                          {
                            "id": 15,
                            "name": "ENT"
                          },
                          {
                            "id": 149,
                            "name": "ENT Specialist"
                          },
                          {
                            "id": 17,
                            "name": "Gastroenterology"
                          },
                          {
                            "id": 18,
                            "name": "Hearing Aid Specialist"
                          },
                          {
                            "id": 9999,
                            "name": "Others"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Empty industry_id": {
                    "value": {
                      "message": "\"industry_id\" is required"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-provider-speciality",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "required": true,
            "description": "Authentication token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "industry_id",
            "required": true,
            "description": "Enter the industry id you want the speciality list of"
          }
        ],
        "description": "Provide the speciality list with unique ids which are used in /provider(post) API"
      }
    },
    "/contract/pay": {
      "post": {
        "summary": "Create and Pay for Contract",
        "tags": [
          "Contract"
        ],
        "responses": {},
        "operationId": "post-contract-pay",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "required": true,
            "description": "Auth token."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "finance_token": {
                    "type": "string",
                    "description": "Finance Token."
                  },
                  "card_token": {
                    "type": "string",
                    "description": "Card Token receieved from iframe."
                  }
                },
                "required": [
                  "finance_token",
                  "card_token"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "finance_token": "7b863ffe354d6894ece92f6564565561",
                    "card_token": "tok_visa"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "title": "Customer",
        "type": "object",
        "x-examples": {},
        "description": "Customer Object",
        "properties": {
          "provider_id": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "customer_email": {
            "type": "string"
          },
          "customer_first_name": {
            "type": "string"
          },
          "customer_last_name": {
            "type": "string"
          },
          "customer_phone": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          }
        },
        "required": [
          "provider_id",
          "amount",
          "month",
          "start_date",
          "customer_email",
          "customer_first_name",
          "customer_phone"
        ]
      },
      "Provider": {
        "title": "Provider Object",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": {
          "provider_id": {
            "type": "number",
            "description": "Provider's Unique Identifier."
          },
          "date_registered": {
            "type": "string",
            "format": "date-time",
            "example": "2020-05-08T11:58:25.000Z",
            "description": "Provider's date of registration."
          },
          "phone": {
            "type": "string",
            "description": "Provider's phone number."
          },
          "last_name": {
            "type": "string",
            "description": "Provider's last name."
          },
          "first_name": {
            "type": "string",
            "description": "Provider's first name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "charles90@denefits.com",
            "description": "Provider's email address. "
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Providers"
    },
    {
      "name": "Contract"
    },
    {
      "name": "File"
    }
  ]
}