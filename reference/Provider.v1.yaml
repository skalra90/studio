openapi: 3.0.0
info:
  title: API Reference
  description: 'The Denefits API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. You can use the Denefits API in test mode, which does not affect your live data or interact with the banking networks. The token you use to authenticate the request determines whether the request is live mode or test mode.'
  version: 1.0.0
servers:
  - url: 'https://endpoint.denefits.com/v1'
paths:
  /providers:
    get:
      summary: List of Providers
      tags:
        - Providers
      operationId: get-providers
      description: This API returns all the providers registered with your account.
      parameters:
        - schema:
            type: string
          in: header
          name: token
          description: Authentication token.
          required: true
      responses:
        '200':
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: string
                  providers_list:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                A Successfull response of Providers List for the token used:
                  value:
                    data:
                      count: 5
                      providers_list:
                        - date_registered: '2020-05-08T05:19:20.000Z'
                          email: test.123@gmail.com
                          first_name: test name
                          last_name: test
                          phone: +1-1212312345
                          provider_id: 9101
                        - date_registered: '2020-05-01T15:36:41.000Z'
                          email: demo.123@yopmail.com
                          first_name: Demo
                          last_name: now
                          phone: +1-8855226644
                          provider_id: 5678
                        - date_registered: '2020-05-01T10:05:49.000Z'
                          email: demo.provider@yopmail.com
                          first_name: Demo
                          last_name: Provider
                          phone: +1-8855774499
                          provider_id: 1234
                    message: Request executed successfully
                A Successfull Response of Provider Details when provider_id is used:
                  value:
                    data:
                      provider_data:
                        date_registered: '2020-05-08T11:20:59.000Z'
                        email: charles.one1@bridgingtech.com
                        first_name: Charles
                        last_name: One
                        phone: +1-1277567890
                        provider_id: 1234
                    message: Request executed successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is missing in the headers:
                  value:
                    data: []
                    message: Mandatory parameter 'token' is missing.
        '401':
          description: Authentication Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is wrong:
                  value:
                    data: []
                    message: Invalid auth token provided
        '402':
          description: ' Request Faild'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                'If provider_id is not valid ':
                  value:
                    data: []
                    message: Invalid provider ID
        '500':
          description: Internal Server Error
    post:
      summary: Create a Provider
      operationId: post-provider
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        provider_id:
                          type: number
                  message:
                    type: string
              examples:
                Provider added successfully:
                  value:
                    data:
                      provider_id: 6410
                    message: Provider added successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is missing in headers:
                  value:
                    data: []
                    message: Mandatory parameter 'token' is missing.
                If any of the required_field is missing in the body:
                  value:
                    data: []
                    message: '"required_field" is required'
                If wrong mobile number is entered:
                  value:
                    data: []
                    message: 'Invalid "phone" provided '
                If wrong email is entered:
                  value:
                    data: []
                    message: '"email" must be a valid email'
                If email is empty:
                  value:
                    data: []
                    message: '"email" is not allowed to be empty'
        '401':
          description: Authentication Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is wrong:
                  value:
                    data: []
                    message: Invalid auth token provided
        '402':
          description: Request Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If mobile number is already exist in the system.:
                  value:
                    data: []
                    message: Same Mobile
        '500':
          description: Internal Server Error
      description: This API creates a new provider under your partner account.
      parameters:
        - schema:
            type: string
          in: header
          name: token
          required: true
      tags:
        - Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
            examples:
              example:
                value:
                  email: Charles.one@bridgingtech.com
                  first_name: Charles
                  last_name: One
                  phone: '1234567890'
        description: Provider Object
  /plans:
    get:
      summary: Get plans for the Finance Amount
      tags:
        - Plans
      responses:
        '200':
          description: A Successfull Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        financing_plans:
                          type: array
                          items:
                            type: object
                            properties:
                              contract_creation_fee:
                                type: number
                              downpayment_transaction_fee:
                                type: number
                              interest_rate:
                                type: number
                              month:
                                type: number
                              recurring_amount:
                                type: number
                              recurring_transaction_fee:
                                type: number
                              upfront_fee:
                                type: number
                  message:
                    type: string
              examples:
                A Successfull Response:
                  value:
                    data:
                      financing_plans:
                        - contract_creation_fee: 30
                          downpayment_transaction_fee: 3
                          interest_rate: 16.99
                          month: 12
                          recurring_amount: 112.37
                          recurring_transaction_fee: 3.37
                          upfront_fee: 112.37
                        - contract_creation_fee: 30
                          downpayment_transaction_fee: 3
                          interest_rate: 16.99
                          month: 13
                          recurring_amount: 105.82
                          recurring_transaction_fee: 3.17
                          upfront_fee: 105.82
                        - contract_creation_fee: 30
                          downpayment_transaction_fee: 3
                          interest_rate: 16.99
                          month: 14
                          recurring_amount: 100.16
                          recurring_transaction_fee: 3
                          upfront_fee: 100.16
                        - contract_creation_fee: 30
                          downpayment_transaction_fee: 3
                          interest_rate: 16.99
                          month: 15
                          recurring_amount: 95.23
                          recurring_transaction_fee: 3
                          upfront_fee: 95.23
                    message: Suceess
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is missing in headers:
                  value:
                    data: []
                    message: Mandatory parameter 'token' is missing.
                If provider_id is missing in query params:
                  value:
                    data: []
                    message: Mandatory parameter 'provider_id' is missing.
                If financed amount is missing or less than 0:
                  value:
                    data: []
                    message: '"financed_amount" is required'
                If financed_amount is not a valid amount:
                  value:
                    data: []
                    message: '"financed_amount" must be a safe number'
        '401':
          description: Authentication Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is wrong:
                  value:
                    data: []
                    message: Invalid auth token provided
                if provider_id is wrong:
                  value:
                    message: Provider does not belong to this partner
        '402':
          description: Request Failed
        '500':
          description: Internal Server Error
      operationId: get-plans
      description: |-
        ### GET Method-
        This API returns all the plans for the given **Financed Amount in query params** under the provider having **token in headers** and **Provider Id in query params**
      parameters:
        - schema:
            type: string
          in: query
          name: financed_amount
          description: Amount to Finance
          required: true
        - schema:
            type: string
          in: header
          name: token
          description: Provider token
          required: true
        - schema:
            type: string
          in: query
          name: provider_id
          description: For a particular provider
          required: true
    parameters: []
  /finance_customer:
    post:
      summary: To Finance a Customer
      operationId: post-finance_customer
      responses:
        '200':
          description: A Successfull Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        contract_id:
                          type: number
                  message:
                    type: string
              examples:
                Customer Financed Successfully:
                  value:
                    data:
                      contract_id: 16633
                    message: Customer Financed Successfully
            application/xml:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        contract_id:
                          type: number
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    data:
                      contract_id: 16633
                    message: Customer Financed Successfully
            multipart/form-data:
              schema:
                type: object
                properties: {}
              examples:
                example-1: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is missing in headers:
                  value:
                    data: []
                    message: Mandatory parameter 'token' is missing.
                If any of the required_field is missing:
                  value:
                    data: []
                    message: '"required_field" is required'
                If financed_amount is empty or is not a number:
                  value:
                    data: []
                    message: '"financed_amount" must be a number'
                If months are not valid:
                  value:
                    message: Number of payments or financed amount are not valid
                If start_date is empty or not a valid date.:
                  value:
                    data: []
                    message: '"start_date" must be a valid date'
                If customer_email is empty:
                  value:
                    data: []
                    message: '"customer_email" is not allowed to be empty'
                If customer_email is not a valid email:
                  value:
                    data: []
                    message: '"customer_email" must be a valid email'
                If customer_mobile is invalid:
                  value:
                    data: []
                    message: 'Invalid "customer_mobile" provided '
                Somethng went wrong:
                  value:
                    message: Contract not financed
        '401':
          description: Authentication Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items: {}
                  message:
                    type: string
              examples:
                If token is wrong:
                  value:
                    data: []
                    message: Invalid auth token provided
                If provider_id is wrong:
                  value:
                    message: Provider does not belong to this partner
        '402':
          description: Request Failed
        '500':
          description: Internal Server Error
      parameters:
        - schema:
            type: string
          in: header
          name: token
          description: A Provider Token
      description: |-
        ### POST Method -
        This API is to finance a customer under the provider account by using **provider token in headers** and a **customer object in body**.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            examples:
              example:
                value:
                  provider_id: '1234'
                  financed_amount: '1000'
                  month: '12'
                  start_date: '2020-04-30'
                  customer_email: charles.ones@bridgingtech.com
                  customer_first_name: Charles
                  customer_last_name: One
                  customer_mobile: '1234567890'
        description: Customer Object
      tags:
        - Finance
    parameters: []
components:
  schemas:
    Provider:
      title: Provider
      type: object
      x-examples: {}
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        phone:
          type: string
      required:
        - email
        - first_name
        - phone
    Customer:
      title: Customer
      type: object
      x-examples: {}
      description: Customer Object
      properties:
        provider_id:
          type: string
        financed_amount:
          type: string
        month:
          type: string
        start_date:
          type: string
        customer_email:
          type: string
        customer_first_name:
          type: string
        customer_last_name:
          type: string
        customer_phone:
          type: string
      required:
        - provider_id
        - financed_amount
        - month
        - start_date
        - customer_email
        - customer_first_name
        - customer_phone
