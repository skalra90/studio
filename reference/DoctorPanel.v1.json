{
  "openapi": "3.0.0",
  "info": {
    "title": "API Reference",
    "version": "1.0.0",
    "description": "The Denefits API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. You can use the Denefits API in test mode, which does not affect your live data or interact with the banking networks. The token you use to authenticate the request determines whether the request is live mode or test mode.",
    "contact": {
      "email": "sukhpreet@denefits.com",
      "name": "Denefits API Support"
    }
  },
  "servers": [
    {
      "url": "https://endpoint.denefits.com/v1",
      "description": "Whitelabel"
    }
  ],
  "paths": {
    "/provider/bank": {
      "post": {
        "summary": "Add Provider's bank account",
        "tags": [
          "Providers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "bank_name": {
                          "type": "string",
                          "description": "Name of the bank"
                        },
                        "routing_number": {
                          "type": "string",
                          "description": "Routing number."
                        },
                        "last4": {
                          "type": "string",
                          "description": "Last 4 digits of account number."
                        },
                        "account_holder_name": {
                          "type": "string",
                          "description": "Account holder name"
                        },
                        "account_holder_type": {
                          "type": "string",
                          "description": "Type of account."
                        },
                        "provider_id": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Bank added successfully",
                      "data": {
                        "account_holder_name": "Jenny Rosen",
                        "account_holder_type": "individual",
                        "bank_name": "STRIPE TEST BANK",
                        "country": "US",
                        "currency": "usd",
                        "routing_number": "110000000",
                        "provider_id": 6408
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If invalid file ID is used": {
                    "value": {
                      "message": "Invalid dl_front provided"
                    }
                  },
                  "If provider already added the bank account": {
                    "value": {
                      "message": "This provider already have a bank account linked with their account.",
                      "code": "REQUEST_FAILED",
                      "flag": 5
                    }
                  },
                  "If same file ID is used again": {
                    "value": {
                      "message": "This file upload is already attached to an account."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If authorization token is wrong": {
                    "value": {
                      "message": "Invalid auth token provided",
                      "code": "AUTHENTICATION_FAILED",
                      "flag": 3
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If same file ID is used again": {
                    "value": {
                      "message": "This file upload is already attached to an account."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-provider-bank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "business_email": {
                    "type": "string"
                  },
                  "business_name": {
                    "type": "string"
                  },
                  "business_phone": {
                    "type": "string"
                  },
                  "business_address": {
                    "type": "string"
                  },
                  "business_zipcode": {
                    "type": "string"
                  },
                  "bank_token": {
                    "type": "string"
                  },
                  "ssn_number": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "example": "1990-01-18",
                    "format": "date"
                  },
                  "back_file": {
                    "type": "string"
                  },
                  "front_file": {
                    "type": "string"
                  }
                },
                "required": [
                  "business_address",
                  "business_zipcode",
                  "bank_token",
                  "ssn_number",
                  "date_of_birth"
                ]
              },
              "examples": {
                "Example-1": {
                  "value": {
                    "business_email": "john@gmail.com",
                    "business_name": "John dentals",
                    "business_phone": "1234567890",
                    "business_address": "#4545 street",
                    "business_zipcode": 12345,
                    "ssn_number": 123456789,
                    "dl_front": "file_1GiLcuGLNiHiuNVIvOx4U3Fy",
                    "dl_back": "file_1GiLd7GLNiHiuNVITn329MVK",
                    "bank_token": "btok_us_verified",
                    "date_of_birth": "1990-05-29"
                  }
                }
              }
            }
          },
          "description": "Add Provider Bank"
        },
        "parameters": [],
        "description": "Add provider's bank account which will be used to receive the payouts"
      },
      "get": {
        "summary": "Retrieve bank account",
        "tags": [
          "Providers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bank_name": {
                          "type": "string",
                          "description": "Name of the bank"
                        },
                        "routing_number": {
                          "type": "string",
                          "description": "Routing number."
                        },
                        "last4": {
                          "type": "string",
                          "description": "Last 4 digits of account number."
                        },
                        "account_holder_name": {
                          "type": "string",
                          "description": "Account holder name"
                        },
                        "account_holder_type": {
                          "type": "string",
                          "description": "Type of account."
                        },
                        "provider_id": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "bank_name": "STRIPE TEST BANK",
                        "routing_number": "110000000",
                        "account_holder_name": "Jenny Rosen",
                        "account_holder_type": "individual",
                        "last4": "6789",
                        "currency": "usd",
                        "country": "US",
                        "provider_id": 6464
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "If authorization token is wrong": {
                    "value": {
                      "message": "Invalid auth token provided",
                      "code": "AUTHENTICATION_FAILED",
                      "flag": 3
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-provider-bank",
        "description": "Returns provider's bank details.",
        "parameters": []
      }
    },
    "/contract/list": {
      "get": {
        "summary": "Get listing of all contracts of this account",
        "tags": [
          "Contract"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "contracts_list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "contract_id": {
                                "type": "string"
                              },
                              "date_added": {
                                "type": "string"
                              },
                              "last_updated": {
                                "type": "string"
                              },
                              "zipcode": {
                                "type": "number"
                              },
                              "contract_status": {
                                "type": "string"
                              },
                              "next_emi_date": {
                                "type": "string"
                              },
                              "remaining_emi": {
                                "type": "number"
                              },
                              "total_emi": {
                                "type": "number"
                              },
                              "emi_amount": {
                                "type": "number"
                              },
                              "interest_rate": {
                                "type": "number"
                              },
                              "financed_amount": {
                                "type": "number"
                              },
                              "customer_signature": {
                                "type": "string"
                              },
                              "customer_address": {
                                "type": "string"
                              },
                              "customer_mobile": {
                                "type": "string"
                              },
                              "customer_email": {
                                "type": "string"
                              },
                              "customer_last_name": {
                                "type": "string"
                              },
                              "customer_first_name": {
                                "type": "string"
                              },
                              "customer_id": {
                                "type": "number"
                              },
                              "provider_id": {
                                "type": "number"
                              },
                              "contract_code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "count": 1,
                        "contracts_list": [
                          {
                            "contract_id": 16813,
                            "contract_code": "RATJJJ****",
                            "provider_id": 6494,
                            "customer_id": 3173,
                            "customer_first_name": "Ted",
                            "customer_last_name": "Mosby",
                            "customer_email": "tedmosby@gmail.com",
                            "customer_mobile": "+1-2055306266",
                            "customer_address": "#15 test, East Pembroke, NY, 14056",
                            "customer_signature": "https://denefits.s3.amazonaws.com/pat************",
                            "financed_amount": 1000,
                            "interest_rate": 16.49,
                            "emi_amount": 67.29,
                            "total_emi": 18,
                            "remaining_emi": 18,
                            "next_emi_date": "2020-05-15",
                            "contract_status": "Active",
                            "title": "",
                            "zipcode": 12345,
                            "last_updated": "2020-05-15T11:14:57.000Z",
                            "date_added": "2020-05-15T07:41:09.000Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "If authorization token is missing": {
                    "value": {
                      "message": "Authorization token is missing.",
                      "code": "PARAMETER_MISSING",
                      "flag": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "If authorization token is wrong": {
                    "value": {
                      "message": "Invalid auth token provided",
                      "code": "AUTHENTICATION_FAILED",
                      "flag": 3
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-contract-list",
        "parameters": [],
        "description": "Get listing of all contracts of this account"
      }
    },
    "/upload_file": {
      "post": {
        "summary": "Upload file to receive file id",
        "operationId": "post-upload_file",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "file_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success ": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "file_id": "file_1GiyMUGL***********"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If file is not provided": {
                    "value": {
                      "message": "file is required"
                    }
                  },
                  "If purpose is not from possible values provided": {
                    "value": {
                      "message": "Possible values for purpose is 'bank_document,denefits_file'"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If authorization token is wrong": {
                    "value": {
                      "message": "Invalid auth token provided",
                      "code": "AUTHENTICATION_FAILED",
                      "flag": 3
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API is used for uploading files and returns file_id which can be used in further API's",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Choose file you want to upload"
                  },
                  "purpose": {
                    "type": "string",
                    "description": "Possible values are \"bank_document\", \"denefits_file\""
                  }
                },
                "required": [
                  "file",
                  "purpose"
                ]
              }
            }
          },
          "description": ""
        },
        "tags": [
          "File"
        ]
      }
    },
    "/contract/detail": {
      "get": {
        "summary": "Get contract details with contract ID",
        "tags": [
          "Contract"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contract_data": {
                          "type": "object",
                          "properties": {
                            "contract_id": {
                              "type": "number"
                            },
                            "contract_code": {
                              "type": "string"
                            },
                            "provider_id": {
                              "type": "number"
                            },
                            "customer_id": {
                              "type": "number"
                            },
                            "customer_first_name": {
                              "type": "string"
                            },
                            "customer_last_name": {
                              "type": "string"
                            },
                            "customer_email": {
                              "type": "string"
                            },
                            "customer_mobile": {
                              "type": "string"
                            },
                            "customer_address": {
                              "type": "string"
                            },
                            "customer_signature": {
                              "type": "string"
                            },
                            "financed_amount": {
                              "type": "number"
                            },
                            "interest_rate": {
                              "type": "number"
                            },
                            "emi_amount": {
                              "type": "number"
                            },
                            "total_emi": {
                              "type": "number"
                            },
                            "remaining_emi": {
                              "type": "number"
                            },
                            "next_emi_date": {
                              "type": "string"
                            },
                            "contract_status": {
                              "type": "string"
                            },
                            "zipcode": {
                              "type": "number"
                            },
                            "last_updated": {
                              "type": "string"
                            },
                            "date_added": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Request executed successfully",
                      "data": {
                        "contract_data": {
                          "contract_id": 16813,
                          "contract_code": "RATJJJ****",
                          "provider_id": 6494,
                          "customer_id": 3173,
                          "customer_first_name": "Ted",
                          "customer_last_name": "Mosby",
                          "customer_email": "tedmosby@gmail.com",
                          "customer_mobile": "+1-2055306266",
                          "customer_address": "#15 test, East Pembroke, NY, 14056",
                          "customer_signature": "https://denefits.s3.amazonaws.com/pat************",
                          "financed_amount": 1000,
                          "interest_rate": 16.49,
                          "emi_amount": 67.29,
                          "total_emi": 18,
                          "remaining_emi": 18,
                          "next_emi_date": "2020-05-15",
                          "contract_status": "Active",
                          "title": "",
                          "zipcode": 12345,
                          "last_updated": "2020-05-15T11:14:57.000Z",
                          "date_added": "2020-05-15T07:41:09.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "If required field is not provided": {
                    "value": {
                      "message": "\"contract_id\" is required",
                      "code": "PARAMETER_MISSING",
                      "flag": 1
                    }
                  },
                  "If invalid contract id is provided": {
                    "value": {
                      "message": "No such contract found.",
                      "code": "REQUEST_FAILED",
                      "flag": 5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "If authorization token is wrong": {
                    "value": {
                      "message": "Invalid auth token provided",
                      "code": "AUTHENTICATION_FAILED",
                      "flag": 3
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-contract",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "contract_id",
            "required": true
          }
        ],
        "description": "Get contract details with ID"
      },
      "parameters": []
    },
    "/customer/details": {
      "post": {
        "summary": "Provide customer details for the contract",
        "operationId": "post-staraligners-customer-details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "number"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "finance_token": {
                          "type": "string"
                        },
                        "plan": {
                          "type": "array",
                          "items": {}
                        },
                        "full_amount": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success": {
                    "value": {
                      "message": "Finance Token Created",
                      "code": "SUCCESS",
                      "flag": 4,
                      "data": {
                        "finance_token": "39d1aeb8a611cd8f9ec6fb2863ba8d48",
                        "plan": [
                          {
                            "plan_id": "plan_P6509M12A1000D00",
                            "number_of_payments": 12,
                            "interest_rate": 16.99,
                            "monthly_payable": {
                              "total": 94.06,
                              "breakdown": {
                                "amount": 91.06,
                                "transaction_fee": 3
                              }
                            },
                            "to_pay_now": {
                              "total": 124.06,
                              "breakdown": {
                                "denefits_enrollment_fee": 30,
                                "upfront_payment": {
                                  "total": 94.06,
                                  "breakdown": {
                                    "amount": 91.06,
                                    "transaction_fee": 3
                                  }
                                }
                              }
                            },
                            "recurring_amount": 91.06,
                            "advance_interest_amount": 91.06
                          }
                        ],
                        "full_amount": {
                          "to_pay_now": {
                            "total": 1116.63,
                            "breakdown": {
                              "amount": 1100,
                              "transaction_fee": 16.63
                            },
                            "doctor_transaction_fee": 16.63
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "If required field is not provided": {
                    "value": {
                      "message": "\"financed_amount\" is required",
                      "code": "PARAMETER_MISSING",
                      "flag": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "flag": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "If authorization token is wrong": {
                    "value": {
                      "message": "Invalid auth token provided",
                      "code": "AUTHENTICATION_FAILED",
                      "flag": 3
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API collects all the details of the customer for the contract",
        "tags": [
          "Staraligners"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "financed_amount": {
                    "type": "number"
                  },
                  "downpayment_amount": {
                    "type": "number"
                  },
                  "number_of_payments": {
                    "type": "number"
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Date should be in format \"YYYY-MM-DD\" and should be a future date"
                  },
                  "customer_email": {
                    "type": "string"
                  },
                  "customer_first_name": {
                    "type": "string"
                  },
                  "customer_last_name": {
                    "type": "string"
                  },
                  "customer_address": {
                    "type": "string"
                  },
                  "customer_mobile": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "description": "Date should be in format \"YYYY-MM-DD\""
                  },
                  "customer_ssn": {
                    "type": "number"
                  },
                  "dl_number": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "number"
                  }
                },
                "required": [
                  "financed_amount",
                  "downpayment_amount",
                  "number_of_payments",
                  "customer_email",
                  "customer_first_name",
                  "customer_mobile",
                  "customer_ssn",
                  "dl_number",
                  "zipcode"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "financed_amount": 1000,
                    "downpayment_amount": 100,
                    "number_of_payments": 12,
                    "start_date": "2020-08-19",
                    "customer_email": "ted@gmail.com",
                    "customer_first_name": "Ted",
                    "customer_last_name": "Mosby",
                    "customer_address": "#15 customer address test",
                    "customer_mobile": "2055306266",
                    "date_of_birth": "1999-08-19",
                    "customer_ssn": "12345678",
                    "dl_number": "DL-4345555",
                    "zipcode": 14056
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": []
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Providers"
    },
    {
      "name": "Contract"
    },
    {
      "name": "File"
    }
  ],
  "security": [
    {
      "authorization": []
    }
  ]
}